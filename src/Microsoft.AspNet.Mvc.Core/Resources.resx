<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MatchAllContentTypeIsNotAllowed" xml:space="preserve">
    <value>The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.</value>
  </data>
  <data name="ObjectResult_MatchAllContentType" xml:space="preserve">
    <value>The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.</value>
  </data>
  <data name="ActionExecutor_WrappedTaskInstance" xml:space="preserve">
    <value>The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.</value>
  </data>
  <data name="ActionExecutor_UnexpectedTaskInstance" xml:space="preserve">
    <value>The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.</value>
  </data>
  <data name="ActionInvokerFactory_CouldNotCreateInvoker" xml:space="preserve">
    <value>An action invoker could not be created for action '{0}'.</value>
  </data>
  <data name="ActionDescriptorMustBeBasedOnControllerAction" xml:space="preserve">
    <value>The action descriptor must be of type '{0}'.</value>
  </data>
  <data name="ArgumentCannotBeNullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty.</value>
  </data>
  <data name="PropertyOfTypeCannotBeNull" xml:space="preserve">
    <value>The '{0}' property of '{1}' must not be null.</value>
  </data>
  <data name="TypeMethodMustReturnNotNullValue" xml:space="preserve">
    <value>The '{0}' method of type '{1}' cannot return a null value.</value>
  </data>
  <data name="ModelBinding_NullValueNotValid" xml:space="preserve">
    <value>The value '{0}' is invalid.</value>
  </data>
  <data name="Invalid_IncludePropertyExpression" xml:space="preserve">
    <value>The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.</value>
  </data>
  <data name="NoRoutesMatched" xml:space="preserve">
    <value>No route matches the supplied values.</value>
  </data>
  <data name="AsyncActionFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="AsyncResultFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="FilterFactoryAttribute_TypeMustImplementIFilter" xml:space="preserve">
    <value>The type provided to '{0}' must implement '{1}'.</value>
  </data>
  <data name="ActionResult_ActionReturnValueCannotBeNull" xml:space="preserve">
    <value>Cannot return null from an action method with a return type of '{0}'.</value>
  </data>
  <data name="TypeMustDeriveFromType" xml:space="preserve">
    <value>The type '{0}' must derive from '{1}'.</value>
  </data>
  <data name="InputFormatterNoEncoding" xml:space="preserve">
    <value>No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.</value>
  </data>
  <data name="UnsupportedContentType" xml:space="preserve">
    <value>Unsupported content type '{0}'.</value>
  </data>
  <data name="OutputFormatterNoMediaType" xml:space="preserve">
    <value>No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.</value>
  </data>
  <data name="AttributeRoute_AggregateErrorMessage" xml:space="preserve">
    <value>The following errors occurred with attribute routing information:{0}{0}{1}</value>
    <comment>{0} is the newline. {1} is the formatted list of errors using AttributeRoute_IndividualErrorMessage</comment>
  </data>
  <data name="AttributeRoute_CannotContainParameter" xml:space="preserve">
    <value>The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.</value>
  </data>
  <data name="AttributeRoute_IndividualErrorMessage" xml:space="preserve">
    <value>For action: '{0}'{1}Error: {2}</value>
    <comment>{1} is the newline.</comment>
  </data>
  <data name="AttributeRoute_TokenReplacement_EmptyTokenNotAllowed" xml:space="preserve">
    <value>An empty replacement token ('[]') is not allowed.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_ImbalancedSquareBrackets" xml:space="preserve">
    <value>Token delimiters ('[', ']') are imbalanced.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_InvalidSyntax" xml:space="preserve">
    <value>The route template '{0}' has invalid syntax. {1}</value>
    <comment>{1} is the specific error message.</comment>
  </data>
  <data name="AttributeRoute_TokenReplacement_ReplacementValueNotFound" xml:space="preserve">
    <value>While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_UnclosedToken" xml:space="preserve">
    <value>A replacement token is not closed.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_UnescapedBraceInToken" xml:space="preserve">
    <value>An unescaped '[' token is not allowed inside of a replacement token. Use '[[' to escape.</value>
  </data>
  <data name="RouteConstraintAttribute_InvalidKeyHandlingValue" xml:space="preserve">
    <value>The value must be either '{0}' or '{1}'.</value>
  </data>
  <data name="UnableToFindServices" xml:space="preserve">
    <value>Unable to find the required services. Please add all the required services by calling '{0}' inside the call to '{1}' or '{2}' in the application startup code.</value>
  </data>
  <data name="AttributeRoute_DifferentLinkGenerationEntries_SameName" xml:space="preserve">
    <value>Two or more routes named '{0}' have different templates.</value>
  </data>
  <data name="AttributeRoute_DuplicateNames_Item" xml:space="preserve">
    <value>Action: '{0}' - Template: '{1}'</value>
    <comment>Formats an action descriptor display name and it's associated template.</comment>
  </data>
  <data name="AttributeRoute_DuplicateNames" xml:space="preserve">
    <value>Attribute routes with the same name '{0}' must have the same template:{1}{2}</value>
    <comment>{0} is the name of the attribute route, {1} is the newline, {2} is the list of errors formatted using ActionDescriptor_WithNamedAttributeRouteAndDifferentTemplate</comment>
  </data>
  <data name="AttributeRoute_AggregateErrorMessage_ErrorNumber" xml:space="preserve">
    <value>Error {0}:{1}{2}</value>
    <comment>{0} is the error number, {1} is Environment.NewLine {2} is the  error message</comment>
  </data>
  <data name="AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod" xml:space="preserve">
    <value>A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all attributes that constrain HTTP verbs.</value>
    <comment>{0} is the MethodInfo.FullName, {1} is Environment.NewLine, {2} is the formatted list of actions defined by that method info.</comment>
  </data>
  <data name="AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item" xml:space="preserve">
    <value>Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'</value>
  </data>
  <data name="AttributeRoute_NullTemplateRepresentation" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="DefaultActionSelector_AmbiguousActions" xml:space="preserve">
    <value>Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}</value>
    <comment>0 is the newline - 1 is a newline separate list of action display names</comment>
  </data>
  <data name="FileResult_InvalidPath" xml:space="preserve">
    <value>Could not find file: {0}</value>
    <comment>{0} is the value for the provided path</comment>
  </data>
  <data name="SerializableError_DefaultError" xml:space="preserve">
    <value>The input was not valid.</value>
  </data>
  <data name="AsyncResourceFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="ResponseCache_SpecifyDuration" xml:space="preserve">
    <value>If the '{0}' property is not set to true, '{1}' property must be specified.</value>
  </data>
  <data name="ApiExplorer_UnsupportedAction" xml:space="preserve">
    <value>The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.</value>
  </data>
  <data name="FormatterMappings_NotValidMediaType" xml:space="preserve">
    <value>The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.</value>
  </data>
  <data name="Format_NotValid" xml:space="preserve">
    <value>The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.</value>
  </data>
  <data name="CacheProfileNotFound" xml:space="preserve">
    <value>The '{0}' cache profile is not defined.</value>
  </data>
  <data name="ModelType_WrongType" xml:space="preserve">
    <value>The model's runtime type '{0}' is not assignable to the type '{1}'.</value>
  </data>
  <data name="ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated" xml:space="preserve">
    <value>The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.</value>
  </data>
  <data name="BinderType_MustBeIModelBinder" xml:space="preserve">
    <value>The type '{0}' must implement '{1}' to be used as a model binder.</value>
  </data>
  <data name="BindingSource_CannotBeComposite" xml:space="preserve">
    <value>The provided binding source '{0}' is a composite. '{1}' requires that the source must represent a single type of input.</value>
  </data>
  <data name="BindingSource_CannotBeGreedy" xml:space="preserve">
    <value>The provided binding source '{0}' is a greedy data source. '{1}' does not support greedy data sources.</value>
  </data>
  <data name="Common_PropertyNotFound" xml:space="preserve">
    <value>The property {0}.{1} could not be found.</value>
  </data>
  <data name="JQueryFormValueProviderFactory_MissingClosingBracket" xml:space="preserve">
    <value>The key '{0}' is invalid JQuery syntax because it is missing a closing bracket.</value>
  </data>
  <data name="KeyValuePair_BothKeyAndValueMustBePresent" xml:space="preserve">
    <value>A value is required.</value>
  </data>
  <data name="ModelBinderUtil_ModelCannotBeNull" xml:space="preserve">
    <value>The binding context has a null Model, but this binder requires a non-null model of type '{0}'.</value>
  </data>
  <data name="ModelBinderUtil_ModelInstanceIsWrong" xml:space="preserve">
    <value>The binding context has a Model of type '{0}', but this binder can only operate on models of type '{1}'.</value>
  </data>
  <data name="ModelBinderUtil_ModelMetadataCannotBeNull" xml:space="preserve">
    <value>The binding context cannot have a null ModelMetadata.</value>
  </data>
  <data name="ModelBinderUtil_ModelTypeIsWrong" xml:space="preserve">
    <value>The binding context has a ModelType of '{0}', but this binder can only operate on models of type '{1}'.</value>
  </data>
  <data name="ModelBinding_MissingBindRequiredMember" xml:space="preserve">
    <value>A value for the '{0}' property was not provided.</value>
  </data>
  <data name="PropertyBindingPredicateProvider_WrongType" xml:space="preserve">
    <value>The type '{0}' does not implement the interface '{1}'.</value>
  </data>
  <data name="ValueProviderResult_NoConverterExists" xml:space="preserve">
    <value>The parameter conversion from type '{0}' to type '{1}' failed because no type converter can convert between these types.</value>
  </data>
  <data name="HttpResponseStreamWriter_InvalidBufferSize" xml:space="preserve">
    <value>The byte buffer must have a length of at least '{0}' to be used with a char buffer of size '{1}' and encoding '{2}'. Use '{3}.{4}' to compute the correct size for the byte buffer.</value>
  </data>
  <data name="FileResult_PathNotRooted" xml:space="preserve">
    <value>Path '{0}' was not rooted.</value>
    <comment>{0} is the path which wasn't rooted</comment>
  </data>
  <data name="UrlNotLocal" xml:space="preserve">
    <value>The supplied URL is not local. A URL with an absolute path is considered local if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.</value>
  </data>
  <data name="HttpRequestStreamReader_InvalidBufferSize" xml:space="preserve">
    <value>The char buffer must have a length of at least '{0}' to be used with a byte buffer of size '{1}' and encoding '{2}'. Use '{3}.{4}' to compute the correct size for the char buffer.</value>
  </data>
  <data name="HttpRequestStreamReader_StreamNotReadable" xml:space="preserve">
    <value>The stream must support reading.</value>
  </data>
  <data name="HttpResponseStreamWriter_StreamNotWritable" xml:space="preserve">
    <value>The stream must support writing.</value>
  </data>
</root>