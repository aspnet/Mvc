<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MatchAllContentTypeIsNotAllowed" xml:space="preserve">
    <value>The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.</value>
  </data>
  <data name="ObjectResult_MatchAllContentType" xml:space="preserve">
    <value>The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.</value>
  </data>
  <data name="AntiForgeryToken_AdditionalDataCheckFailed" xml:space="preserve">
    <value>The provided anti-forgery token failed a custom data check.</value>
  </data>
  <data name="AntiForgeryToken_ClaimUidMismatch" xml:space="preserve">
    <value>The provided anti-forgery token was meant for a different claims-based user than the current user.</value>
  </data>
  <data name="AntiForgeryToken_CookieMissing" xml:space="preserve">
    <value>The required anti-forgery cookie "{0}" is not present.</value>
  </data>
  <data name="AntiForgeryToken_DeserializationFailed" xml:space="preserve">
    <value>The anti-forgery token could not be decrypted.</value>
  </data>
  <data name="AntiForgeryToken_FormFieldMissing" xml:space="preserve">
    <value>The required anti-forgery form field "{0}" is not present.</value>
  </data>
  <data name="AntiForgeryToken_SecurityTokenMismatch" xml:space="preserve">
    <value>The anti-forgery cookie token and form field token do not match.</value>
  </data>
  <data name="AntiForgeryToken_TokensSwapped" xml:space="preserve">
    <value>Validation of the provided anti-forgery token failed. The cookie "{0}" and the form field "{1}" were swapped.</value>
  </data>
  <data name="AntiForgeryToken_UsernameMismatch" xml:space="preserve">
    <value>The provided anti-forgery token was meant for user "{0}", but the current user is "{1}".</value>
  </data>
  <data name="AntiForgeryWorker_RequireSSL" xml:space="preserve">
    <value>The anti-forgery system has the configuration value AntiForgeryOptions.RequireSsl = true, but the current request is not an SSL request.</value>
  </data>
  <data name="ActionExecutor_WrappedTaskInstance" xml:space="preserve">
    <value>The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.</value>
  </data>
  <data name="ActionExecutor_UnexpectedTaskInstance" xml:space="preserve">
    <value>The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.</value>
  </data>
  <data name="ClaimUidExtractor_ClaimNotPresent" xml:space="preserve">
    <value>A claim of type '{0}' was not present on the provided ClaimsIdentity.</value>
  </data>
  <data name="TokenValidator_AuthenticatedUserWithoutUsername" xml:space="preserve">
    <value>The provided identity of type '{0}' is marked IsAuthenticated = true but does not have a value for Name. By default, the anti-forgery system requires that all authenticated identities have a unique Name. If it is not possible to provide a unique Name for this identity, consider extending IAdditionalDataProvider by overriding the DefaultAdditionalDataProvider or a custom type that can provide some form of unique identifier for the current user.</value>
  </data>
  <data name="ReflectedActionFilterEndPoint_UnexpectedActionDescriptor" xml:space="preserve">
    <value>The class ReflectedActionFilterEndPoint only supports ReflectedActionDescriptors.</value>
  </data>
  <data name="ViewComponent_AmbiguousTypeMatch" xml:space="preserve">
    <value>The view component name '{0}' matched multiple types:{1}{2}</value>
    <comment>{1} is the newline character</comment>
  </data>
  <data name="ViewComponent_AsyncMethod_ShouldReturnTask" xml:space="preserve">
    <value>The async view component method '{0}' should be declared to return Task&lt;T&gt;.</value>
  </data>
  <data name="ViewComponent_MustReturnValue" xml:space="preserve">
    <value>A view component must return a non-null value.</value>
  </data>
  <data name="ViewComponent_SyncMethod_ShouldReturnValue" xml:space="preserve">
    <value>The view component method '{0}' should be declared to return a value.</value>
  </data>
  <data name="ViewComponent_CannotFindComponent" xml:space="preserve">
    <value>A view component named '{0}' could not be found.</value>
  </data>
  <data name="ViewComponent_IViewComponentFactory_ReturnedNull" xml:space="preserve">
    <value>An invoker could not be created for the view component '{0}'.</value>
  </data>
  <data name="ViewComponent_CannotFindMethod" xml:space="preserve">
    <value>Could not find an '{0}' method matching the parameters.</value>
  </data>
  <data name="ViewComponent_CannotFindMethod_WithFallback" xml:space="preserve">
    <value>Could not find an '{0}' or '{1}' method matching the parameters.</value>
  </data>
  <data name="ViewComponent_InvalidReturnValue" xml:space="preserve">
    <value>View components only support returning {0}, {1} or {2}.</value>
  </data>
  <data name="ActionContextAccessor_SetValueNotSupported" xml:space="preserve">
    <value>Replacing the action context is not supported.</value>
  </data>
  <data name="ActionInvokerFactory_CouldNotCreateInvoker" xml:space="preserve">
    <value>An action invoker could not be created for action '{0}'.</value>
  </data>
  <data name="ActionDescriptorMustBeBasedOnControllerAction" xml:space="preserve">
    <value>The action descriptor must be of type '{0}'.</value>
  </data>
  <data name="ArgumentCannotBeNullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty.</value>
  </data>
  <data name="PropertyOfTypeCannotBeNull" xml:space="preserve">
    <value>The '{0}' property of '{1}' must not be null.</value>
  </data>
  <data name="TypeMethodMustReturnNotNullValue" xml:space="preserve">
    <value>The '{0}' method of type '{1}' cannot return a null value.</value>
  </data>
  <data name="ActionSelector_GetCandidateActionsIsAmbiguous" xml:space="preserve">
    <value>The supplied route values are ambiguous and can select multiple sets of actions.</value>
  </data>
  <data name="ArgumentPropertyUnexpectedType" xml:space="preserve">
    <value>Property '{0}' is of type '{1}', but this method requires a value of type '{2}'.</value>
  </data>
  <data name="Common_PartialViewNotFound" xml:space="preserve">
    <value>The partial view '{0}' was not found or no view engine supports the searched locations. The following locations were searched:{1}</value>
  </data>
  <data name="Common_ValueNotValidForProperty" xml:space="preserve">
    <value>The value '{0}' is invalid.</value>
  </data>
  <data name="Common_TriState_False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="Common_TriState_NotSet" xml:space="preserve">
    <value>Not Set</value>
  </data>
  <data name="Common_TriState_True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="DynamicViewData_ViewDataNull" xml:space="preserve">
    <value>ViewData value must not be null.</value>
  </data>
  <data name="ExpressionHelper_InvalidIndexerExpression" xml:space="preserve">
    <value>The expression compiler was unable to evaluate the indexer expression '{0}' because it references the model parameter '{1}' which is unavailable.</value>
  </data>
  <data name="Invalid_IncludePropertyExpression" xml:space="preserve">
    <value>The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.</value>
  </data>
  <data name="HtmlHelper_NullModelMetadata" xml:space="preserve">
    <value>The IModelMetadataProvider was unable to provide metadata for expression '{0}'.</value>
  </data>
  <data name="HtmlHelper_NotContextualized" xml:space="preserve">
    <value>Must call 'Contextualize' method before using this HtmlHelper instance.</value>
  </data>
  <data name="HtmlHelper_MissingSelectData" xml:space="preserve">
    <value>There is no ViewData item of type '{0}' that has the key '{1}'.</value>
  </data>
  <data name="HtmlHelper_SelectExpressionNotEnumerable" xml:space="preserve">
    <value>The parameter '{0}' must evaluate to an IEnumerable when multiple selection is allowed.</value>
  </data>
  <data name="HtmlHelper_WrongSelectDataType" xml:space="preserve">
    <value>The ViewData item that has the key '{0}' is of type '{1}' but must be of type '{2}'.</value>
  </data>
  <data name="Templates_TypeMustImplementIEnumerable" xml:space="preserve">
    <value>The '{0}' template was used with an object of type '{1}', which does not implement '{2}'.</value>
  </data>
  <data name="TemplateHelpers_TemplateLimitations" xml:space="preserve">
    <value>Templates can be used only with field access, property access, single-dimension array index, or single-parameter custom indexer expressions.</value>
  </data>
  <data name="TemplateHelpers_NoTemplate" xml:space="preserve">
    <value>Unable to locate an appropriate template for type {0}.</value>
  </data>
  <data name="ViewData_ModelCannotBeNull" xml:space="preserve">
    <value>The model item passed is null, but this ViewDataDictionary instance requires a non-null model item of type '{0}'.</value>
  </data>
  <data name="ViewData_WrongTModelType" xml:space="preserve">
    <value>The model item passed into the ViewDataDictionary is of type '{0}', but this ViewDataDictionary instance requires a model item of type '{1}'.</value>
  </data>
  <data name="NoRoutesMatched" xml:space="preserve">
    <value>No route matches the supplied values.</value>
  </data>
  <data name="AsyncActionFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="AsyncResultFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="ViewEngine_PartialViewNotFound" xml:space="preserve">
    <value>The partial view '{0}' was not found. The following locations were searched:{1}</value>
  </data>
  <data name="ViewEngine_ViewNotFound" xml:space="preserve">
    <value>The view '{0}' was not found. The following locations were searched:{1}.</value>
  </data>
  <data name="AuthorizeAttribute_AuthorizationServiceMustBeDefined" xml:space="preserve">
    <value>Unable to locate an implementation of IAuthorizationService.</value>
  </data>
  <data name="AuthorizeAttribute_OnAuthorizationNotImplemented" xml:space="preserve">
    <value>OnAuthorization is not implemented by this filter, use OnAuthorizationAsync instead.</value>
  </data>
  <data name="HtmlHelper_TextAreaParameterOutOfRange" xml:space="preserve">
    <value>The value must be greater than or equal to zero.</value>
  </data>
  <data name="FilterFactoryAttribute_TypeMustImplementIFilter" xml:space="preserve">
    <value>The type provided to '{0}' must implement '{1}'.</value>
  </data>
  <data name="UnobtrusiveJavascript_ValidationParameterCannotBeEmpty" xml:space="preserve">
    <value>Validation parameter names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</value>
  </data>
  <data name="UnobtrusiveJavascript_ValidationParameterMustBeLegal" xml:space="preserve">
    <value>Validation parameter names in unobtrusive client validation rules must start with a lowercase letter and consist of only lowercase letters or digits. Validation parameter name: {0}, client rule type: {1}</value>
  </data>
  <data name="UnobtrusiveJavascript_ValidationTypeCannotBeEmpty" xml:space="preserve">
    <value>Validation type names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</value>
  </data>
  <data name="UnobtrusiveJavascript_ValidationTypeMustBeLegal" xml:space="preserve">
    <value>Validation type names in unobtrusive client validation rules must consist of only lowercase letters. Invalid name: "{0}", client rule type: {1}</value>
  </data>
  <data name="UnobtrusiveJavascript_ValidationTypeMustBeUnique" xml:space="preserve">
    <value>Validation type names in unobtrusive client validation rules must be unique. The following validation type was seen more than once: {0}</value>
  </data>
  <data name="ActionResult_ActionReturnValueCannotBeNull" xml:space="preserve">
    <value>Cannot return null from an action method with a return type of '{0}'.</value>
  </data>
  <data name="ValueTypesCannotBeActivated" xml:space="preserve">
    <value>Value types cannot be activated by '{0}'.</value>
  </data>
  <data name="TypeMustDeriveFromType" xml:space="preserve">
    <value>The type '{0}' must derive from '{1}'.</value>
  </data>
  <data name="OutputFormatterNoEncoding" xml:space="preserve">
    <value>No encoding found for output formatter '{0}'. There must be at least one supported encoding registered in order for the output formatter to write content.</value>
  </data>
  <data name="InputFormatterNoEncoding" xml:space="preserve">
    <value>No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.</value>
  </data>
  <data name="UnsupportedContentType" xml:space="preserve">
    <value>Unsupported content type '{0}'.</value>
  </data>
  <data name="OutputFormatterNoMediaType" xml:space="preserve">
    <value>No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.</value>
  </data>
  <data name="AttributeRoute_AggregateErrorMessage" xml:space="preserve">
    <value>The following errors occurred with attribute routing information:{0}{0}{1}</value>
    <comment>{0} is the newline. {1} is the formatted list of errors using AttributeRoute_IndividualErrorMessage</comment>
  </data>
  <data name="AttributeRoute_CannotContainParameter" xml:space="preserve">
    <value>The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.</value>
  </data>
  <data name="AttributeRoute_IndividualErrorMessage" xml:space="preserve">
    <value>For action: '{0}'{1}Error: {2}</value>
    <comment>{1} is the newline.</comment>
  </data>
  <data name="AttributeRoute_TokenReplacement_EmptyTokenNotAllowed" xml:space="preserve">
    <value>An empty replacement token ('[]') is not allowed.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_ImbalancedSquareBrackets" xml:space="preserve">
    <value>Token delimiters ('[', ']') are imbalanced.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_InvalidSyntax" xml:space="preserve">
    <value>The route template '{0}' has invalid syntax. {1}</value>
    <comment>{1} is the specific error message.</comment>
  </data>
  <data name="AttributeRoute_TokenReplacement_ReplacementValueNotFound" xml:space="preserve">
    <value>While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_UnclosedToken" xml:space="preserve">
    <value>A replacement token is not closed.</value>
  </data>
  <data name="AttributeRoute_TokenReplacement_UnescapedBraceInToken" xml:space="preserve">
    <value>An unescaped '[' token is not allowed inside of a replacement token. Use '[[' to escape.</value>
  </data>
  <data name="RouteConstraintAttribute_InvalidKeyHandlingValue" xml:space="preserve">
    <value>The value must be either '{0}' or '{1}'.</value>
  </data>
  <data name="UnableToFindServices" xml:space="preserve">
    <value>Unable to find the required services. Please add all the required services by calling '{0}' inside the call to '{1}' or '{2}' in the application startup code.</value>
  </data>
  <data name="AttributeRoute_DifferentLinkGenerationEntries_SameName" xml:space="preserve">
    <value>Two or more routes named '{0}' have different templates.</value>
  </data>
  <data name="AttributeRoute_DuplicateNames_Item" xml:space="preserve">
    <value>Action: '{0}' - Template: '{1}'</value>
    <comment>Formats an action descriptor display name and it's associated template.</comment>
  </data>
  <data name="AttributeRoute_DuplicateNames" xml:space="preserve">
    <value>Attribute routes with the same name '{0}' must have the same template:{1}{2}</value>
    <comment>{0} is the name of the attribute route, {1} is the newline, {2} is the list of errors formatted using ActionDescriptor_WithNamedAttributeRouteAndDifferentTemplate</comment>
  </data>
  <data name="AttributeRoute_AggregateErrorMessage_ErrorNumber" xml:space="preserve">
    <value>Error {0}:{1}{2}</value>
    <comment>{0} is the error number, {1} is Environment.NewLine {2} is the  error message</comment>
  </data>
  <data name="TemplatedViewLocationExpander_NoReplacementToken" xml:space="preserve">
    <value>Could not find a replacement for view expansion token '{0}'.</value>
  </data>
  <data name="TemplatedExpander_PopulateValuesMustBeInvokedFirst" xml:space="preserve">
    <value>{0} must be executed before {1} can be invoked.</value>
  </data>
  <data name="TemplatedExpander_ValueFactoryCannotReturnNull" xml:space="preserve">
    <value>The result of value factory cannot be null.</value>
  </data>
  <data name="AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod" xml:space="preserve">
    <value>A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all attributes that constrain HTTP verbs.</value>
    <comment>{0} is the MethodInfo.FullName, {1} is Environment.NewLine, {2} is the formatted list of actions defined by that method info.</comment>
  </data>
  <data name="AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item" xml:space="preserve">
    <value>Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'</value>
  </data>
  <data name="AttributeRoute_NullTemplateRepresentation" xml:space="preserve">
    <value>(none)</value>
  </data>
  <data name="DefaultActionSelector_AmbiguousActions" xml:space="preserve">
    <value>Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}</value>
    <comment>0 is the newline - 1 is a newline separate list of action display names</comment>
  </data>
  <data name="FileResult_InvalidPath" xml:space="preserve">
    <value>Could not find file: {0}</value>
    <comment>{0} is the value for the provided path</comment>
  </data>
  <data name="ViewComponent_AmbiguousTypeMatch_Item" xml:space="preserve">
    <value>Type: '{0}' - Name: '{1}'</value>
  </data>
  <data name="SerializableError_DefaultError" xml:space="preserve">
    <value>The input was not valid.</value>
  </data>
  <data name="AsyncResourceFilter_InvalidShortCircuit" xml:space="preserve">
    <value>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</value>
  </data>
  <data name="ResponseCache_SpecifyDuration" xml:space="preserve">
    <value>If the '{0}' property is not set to true, '{1}' property must be specified.</value>
  </data>
  <data name="ApiExplorer_UnsupportedAction" xml:space="preserve">
    <value>The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.</value>
  </data>
  <data name="FormatterMappings_NotValidMediaType" xml:space="preserve">
    <value>The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.</value>
  </data>
  <data name="Format_NotValid" xml:space="preserve">
    <value>The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.</value>
  </data>
  <data name="ControllerFactory_PropertyCannotBeActivated" xml:space="preserve">
    <value>The property '{0}' on controller '{1}' cannot be activated.</value>
  </data>
  <data name="RemoteAttribute_NoUrlFound" xml:space="preserve">
    <value>No URL for remote validation could be found.</value>
  </data>
  <data name="RemoteAttribute_RemoteValidationFailed" xml:space="preserve">
    <value>'{0}' is invalid.</value>
  </data>
  <data name="CacheProfileNotFound" xml:space="preserve">
    <value>The '{0}' cache profile is not defined.</value>
  </data>
  <data name="ModelType_WrongType" xml:space="preserve">
    <value>The model's runtime type '{0}' is not assignable to the type '{1}'.</value>
  </data>
  <data name="AsyncTimeoutAttribute_InvalidTimeout" xml:space="preserve">
    <value>The timeout value must be non-negative.</value>
  </data>
</root>