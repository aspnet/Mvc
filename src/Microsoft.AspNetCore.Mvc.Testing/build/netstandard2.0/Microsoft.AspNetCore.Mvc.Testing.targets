<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    Work around https://github.com/NuGet/Home/issues/4412. MVC uses DependencyContext.Load() which looks next to a .dll
    for a .deps.json. Information isn't available elsewhere. Need the .deps.json file for all web site applications.
  -->
  <PropertyGroup>
    <!--
      The functional tests act as the host application for all test websites. Since the CLI copies all reference
      assembly dependencies in websites to their corresponding bin/{config}/refs folder we need to re-calculate
      reference assemblies for this project so there's a corresponding refs folder in our output. Without it
      our websites deps files will fail to find their assembly references.
    -->

    <PreserveCompilationContext>true</PreserveCompilationContext>
    <GenerateWebApplicationFactoryContentRootAttribute>true</GenerateWebApplicationFactoryContentRootAttribute>
  </PropertyGroup>

    <Target Name="_ResolveMvcTestProjectReferences" DependsOnTargets="ResolveReferences">
      <ItemGroup>
        <_ContentRootProjectReferences
          Include="@(ReferencePath)"
          Condition="'%(ReferencePath.ReferenceSourceTarget)' == 'ProjectReference' and '%(ReferencePath.TargetFrameworkIdentifier)' != '.NETStandard'" />
      </ItemGroup>
    </Target>

  <Target
    Name="_AddContentRootForProjectReferences"
    Condition="'$(GenerateWebApplicationFactoryContentRootAttribute)' == 'true'"
    BeforeTargets="BeforeCompile"
    DependsOnTargets="_ResolveMvcTestProjectReferences">

    <PropertyGroup>
      <MvcTestingAssemblyInfo>$(ProjectDir)$(IntermediateOutputPath)MvcTesting.AssemblyInfo.cs</MvcTestingAssemblyInfo>
    </PropertyGroup>

    <ItemGroup>
      <WebApplicationFactoryContentRootAttribute
        Condition="'%(_ContentRootProjectReferences.Identity)' != ''"
        Include="%(_ContentRootProjectReferences.Identity)"
        AssemblyName="%(_ContentRootProjectReferences.FusionName)"
        ContentRootPath="$([System.IO.Path]::GetDirectoryName(%(_ContentRootProjectReferences.MSBuildSourceProjectFile)))"
        ContentRootTest="$([System.IO.Path]::GetFileName(%(_ContentRootProjectReferences.MSBuildSourceProjectFile)))"
        Priority="0" />
    </ItemGroup>

    <ItemGroup>
      <AttributeLine
        Condition="'@(WebApplicationFactoryContentRootAttribute)' != ''"
        Include="@(WebApplicationFactoryContentRootAttribute->'[assembly: Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryContentRoot(&quot;%(AssemblyName)&quot;, @&quot;%(ContentRootPath)&quot;, @&quot;%(ContentRootTest)&quot;, &quot;%(Priority)&quot;)]')" />
    </ItemGroup>

    <WriteLinesToFile
      Condition="'@(WebApplicationFactoryContentRootAttribute)' != ''"
      Lines="@(AttributeLine)"
      File="$(ProjectDir)$(IntermediateOutputPath)MvcTesting.AssemblyInfo.cs"
      WriteOnlyWhenDifferent="true"
      Overwrite="true" />

    <ItemGroup>
      <Compile Include="$(MvcTestingAssemblyInfo)" Condition="'@(WebApplicationFactoryContentRootAttribute)' != ''" />
    </ItemGroup>
  </Target>

  <Target Name="CopyAditionalFiles" AfterTargets="Build;_ResolveMvcTestProjectReferences" Condition="'$(TargetFramework)'!=''">
    <ItemGroup>
      <DepsFilePaths
        Condition="'%(_ContentRootProjectReferences.Identity)' != ''"
        Include="$([System.IO.Path]::ChangeExtension('%(_ContentRootProjectReferences.ResolvedFrom)', '.deps.json'))" />
    </ItemGroup>

    <Copy SourceFiles="%(DepsFilePaths.FullPath)" DestinationFolder="$(OutputPath)" Condition="Exists('%(DepsFilePaths.FullPath)')" />
  </Target>
    
</Project>